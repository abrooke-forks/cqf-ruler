{
  "resourceType": "Bundle",
  "type": "transaction",
  "entry": [
    {
      "resource": {
        "resourceType": "Library",
        "id": "AdultOutpatientEncounters",
        "status": "active",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "dataRequirement": [
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1001"
              }
            ]
          },
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.526.3.1240"
              }
            ]
          },
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1025"
              }
            ]
          },
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1023"
              }
            ]
          },
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1016"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGxpYnJhcnkgeG1sbnM9InVybjpobDctb3JnOmVsbTpyMSIgeG1sbnM6dD0idXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4bWxuczp4c2Q9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczpmaGlyPSJodHRwOi8vaGw3Lm9yZy9maGlyIiB4bWxuczpxZG00Mz0idXJuOmhlYWx0aGl0LWdvdjpxZG06djRfMyIgeG1sbnM6cWRtNTM9InVybjpoZWFsdGhpdC1nb3Y6cWRtOnY1XzMiIHhtbG5zOmE9InVybjpobDctb3JnOmNxbC1hbm5vdGF0aW9uczpyMSI+CiAgIDxpZGVudGlmaWVyIGlkPSJBZHVsdE91dHBhdGllbnRFbmNvdW50ZXJzIiB2ZXJzaW9uPSIxLjEuMDAwIi8+CiAgIDxzY2hlbWFJZGVudGlmaWVyIGlkPSJ1cm46aGw3LW9yZzplbG0iIHZlcnNpb249InIxIi8+CiAgIDx1c2luZ3M+CiAgICAgIDxkZWYgbG9jYWxJZGVudGlmaWVyPSJTeXN0ZW0iIHVyaT0idXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxIi8+CiAgICAgIDxkZWYgbG9jYWxJZGVudGlmaWVyPSJRRE0iIHVyaT0idXJuOmhlYWx0aGl0LWdvdjpxZG06djVfMyIgdmVyc2lvbj0iNS4zIi8+CiAgIDwvdXNpbmdzPgogICA8Y29kZVN5c3RlbXM+CiAgICAgIDxkZWYgbmFtZT0iTE9JTkM6Mi40NiIgaWQ9Imh0dHA6Ly9sb2luYy5vcmciIHZlcnNpb249InVybjpobDc6dmVyc2lvbjoyLjQ2IiBhY2Nlc3NMZXZlbD0iUHVibGljIi8+CiAgICAgIDxkZWYgbmFtZT0iU05PTUVEQ1Q6MjAxNi0wMyIgaWQ9Imh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiIHZlcnNpb249InVybjpobDc6dmVyc2lvbjoyMDE2LTAzIiBhY2Nlc3NMZXZlbD0iUHVibGljIi8+CiAgIDwvY29kZVN5c3RlbXM+CiAgIDx2YWx1ZVNldHM+CiAgICAgIDxkZWYgbmFtZT0iT2ZmaWNlIFZpc2l0IiBpZD0idXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDAxIiBhY2Nlc3NMZXZlbD0iUHVibGljIi8+CiAgICAgIDxkZWYgbmFtZT0iQW5udWFsIFdlbGxuZXNzIFZpc2l0IiBpZD0idXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjUyNi4zLjEyNDAiIGFjY2Vzc0xldmVsPSJQdWJsaWMiLz4KICAgICAgPGRlZiBuYW1lPSJQcmV2ZW50aXZlIENhcmUgU2VydmljZXMgLSBFc3RhYmxpc2hlZCBPZmZpY2UgVmlzaXQsIDE4IGFuZCBVcCIgaWQ9InVybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDEuMTIuMTAyNSIgYWNjZXNzTGV2ZWw9IlB1YmxpYyIvPgogICAgICA8ZGVmIG5hbWU9IlByZXZlbnRpdmUgQ2FyZSBTZXJ2aWNlcy1Jbml0aWFsIE9mZmljZSBWaXNpdCwgMTggYW5kIFVwIiBpZD0idXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDIzIiBhY2Nlc3NMZXZlbD0iUHVibGljIi8+CiAgICAgIDxkZWYgbmFtZT0iSG9tZSBIZWFsdGhjYXJlIFNlcnZpY2VzIiBpZD0idXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDE2IiBhY2Nlc3NMZXZlbD0iUHVibGljIi8+CiAgIDwvdmFsdWVTZXRzPgogICA8Y29kZXM+CiAgICAgIDxkZWYgbmFtZT0iQmlydGhkYXRlIiBpZD0iMjExMTItOCIgZGlzcGxheT0iQmlydGggZGF0ZSIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxjb2RlU3lzdGVtIG5hbWU9IkxPSU5DOjIuNDYiLz4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbmFtZT0iRGVhZCIgaWQ9IjQxOTA5OTAwOSIgZGlzcGxheT0iRGVhZCIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxjb2RlU3lzdGVtIG5hbWU9IlNOT01FRENUOjIwMTYtMDMiLz4KICAgICAgPC9kZWY+CiAgIDwvY29kZXM+CiAgIDxzdGF0ZW1lbnRzPgogICAgICA8ZGVmIG5hbWU9IlBhdGllbnQiIGNvbnRleHQ9IlBhdGllbnQiPgogICAgICAgICA8ZXhwcmVzc2lvbiB4c2k6dHlwZT0iU2luZ2xldG9uRnJvbSI+CiAgICAgICAgICAgIDxvcGVyYW5kIGRhdGFUeXBlPSJxZG01MzpQYXRpZW50IiB0ZW1wbGF0ZUlkPSJQYXRpZW50IiB4c2k6dHlwZT0iUmV0cmlldmUiLz4KICAgICAgICAgPC9leHByZXNzaW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBuYW1lPSJRdWFsaWZ5aW5nIEVuY291bnRlcnMiIGNvbnRleHQ9IlBhdGllbnQiIGFjY2Vzc0xldmVsPSJQdWJsaWMiIHhzaTp0eXBlPSJGdW5jdGlvbkRlZiI+CiAgICAgICAgIDxleHByZXNzaW9uIHhzaTp0eXBlPSJRdWVyeSI+CiAgICAgICAgICAgIDxzb3VyY2UgYWxpYXM9IlZhbGlkRW5jb3VudGVyIj4KICAgICAgICAgICAgICAgPGV4cHJlc3Npb24geHNpOnR5cGU9IlVuaW9uIj4KICAgICAgICAgICAgICAgICAgPG9wZXJhbmQgeHNpOnR5cGU9IlVuaW9uIj4KICAgICAgICAgICAgICAgICAgICAgPG9wZXJhbmQgeHNpOnR5cGU9IlVuaW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgPG9wZXJhbmQgeHNpOnR5cGU9IlVuaW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wZXJhbmQgZGF0YVR5cGU9InFkbTUzOlBvc2l0aXZlRW5jb3VudGVyUGVyZm9ybWVkIiB0ZW1wbGF0ZUlkPSJQb3NpdGl2ZUVuY291bnRlclBlcmZvcm1lZCIgY29kZVByb3BlcnR5PSJjb2RlIiB4c2k6dHlwZT0iUmV0cmlldmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29kZXMgbmFtZT0iT2ZmaWNlIFZpc2l0IiB4c2k6dHlwZT0iVmFsdWVTZXRSZWYiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9vcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8b3BlcmFuZCBkYXRhVHlwZT0icWRtNTM6UG9zaXRpdmVFbmNvdW50ZXJQZXJmb3JtZWQiIHRlbXBsYXRlSWQ9IlBvc2l0aXZlRW5jb3VudGVyUGVyZm9ybWVkIiBjb2RlUHJvcGVydHk9ImNvZGUiIHhzaTp0eXBlPSJSZXRyaWV2ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2RlcyBuYW1lPSJBbm51YWwgV2VsbG5lc3MgVmlzaXQiIHhzaTp0eXBlPSJWYWx1ZVNldFJlZiIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8L29wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvb3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgPG9wZXJhbmQgZGF0YVR5cGU9InFkbTUzOlBvc2l0aXZlRW5jb3VudGVyUGVyZm9ybWVkIiB0ZW1wbGF0ZUlkPSJQb3NpdGl2ZUVuY291bnRlclBlcmZvcm1lZCIgY29kZVByb3BlcnR5PSJjb2RlIiB4c2k6dHlwZT0iUmV0cmlldmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29kZXMgbmFtZT0iUHJldmVudGl2ZSBDYXJlIFNlcnZpY2VzIC0gRXN0YWJsaXNoZWQgT2ZmaWNlIFZpc2l0LCAxOCBhbmQgVXAiIHhzaTp0eXBlPSJWYWx1ZVNldFJlZiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L29wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgIDwvb3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgPG9wZXJhbmQgZGF0YVR5cGU9InFkbTUzOlBvc2l0aXZlRW5jb3VudGVyUGVyZm9ybWVkIiB0ZW1wbGF0ZUlkPSJQb3NpdGl2ZUVuY291bnRlclBlcmZvcm1lZCIgY29kZVByb3BlcnR5PSJjb2RlIiB4c2k6dHlwZT0iUmV0cmlldmUiPgogICAgICAgICAgICAgICAgICAgICAgICA8Y29kZXMgbmFtZT0iUHJldmVudGl2ZSBDYXJlIFNlcnZpY2VzLUluaXRpYWwgT2ZmaWNlIFZpc2l0LCAxOCBhbmQgVXAiIHhzaTp0eXBlPSJWYWx1ZVNldFJlZiIvPgogICAgICAgICAgICAgICAgICAgICA8L29wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDwvb3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPG9wZXJhbmQgZGF0YVR5cGU9InFkbTUzOlBvc2l0aXZlRW5jb3VudGVyUGVyZm9ybWVkIiB0ZW1wbGF0ZUlkPSJQb3NpdGl2ZUVuY291bnRlclBlcmZvcm1lZCIgY29kZVByb3BlcnR5PSJjb2RlIiB4c2k6dHlwZT0iUmV0cmlldmUiPgogICAgICAgICAgICAgICAgICAgICA8Y29kZXMgbmFtZT0iSG9tZSBIZWFsdGhjYXJlIFNlcnZpY2VzIiB4c2k6dHlwZT0iVmFsdWVTZXRSZWYiLz4KICAgICAgICAgICAgICAgICAgPC9vcGVyYW5kPgogICAgICAgICAgICAgICA8L2V4cHJlc3Npb24+CiAgICAgICAgICAgIDwvc291cmNlPgogICAgICAgICAgICA8d2hlcmUgcHJlY2lzaW9uPSJEYXkiIHhzaTp0eXBlPSJJbmNsdWRlZEluIj4KICAgICAgICAgICAgICAgPG9wZXJhbmQgcGF0aD0icmVsZXZhbnRQZXJpb2QiIHNjb3BlPSJWYWxpZEVuY291bnRlciIgeHNpOnR5cGU9IlByb3BlcnR5Ii8+CiAgICAgICAgICAgICAgIDxvcGVyYW5kIG5hbWU9Ik1lYXN1cmVtZW50UGVyaW9kIiB4c2k6dHlwZT0iT3BlcmFuZFJlZiIvPgogICAgICAgICAgICA8L3doZXJlPgogICAgICAgICA8L2V4cHJlc3Npb24+CiAgICAgICAgIDxvcGVyYW5kIG5hbWU9Ik1lYXN1cmVtZW50UGVyaW9kIj4KICAgICAgICAgICAgPG9wZXJhbmRUeXBlU3BlY2lmaWVyIHhzaTp0eXBlPSJJbnRlcnZhbFR5cGVTcGVjaWZpZXIiPgogICAgICAgICAgICAgICA8cG9pbnRUeXBlIG5hbWU9InQ6RGF0ZVRpbWUiIHhzaTp0eXBlPSJOYW1lZFR5cGVTcGVjaWZpZXIiLz4KICAgICAgICAgICAgPC9vcGVyYW5kVHlwZVNwZWNpZmllcj4KICAgICAgICAgPC9vcGVyYW5kPgogICAgICA8L2RlZj4KICAgPC9zdGF0ZW1lbnRzPgo8L2xpYnJhcnk+Cg=="
          },
          {
            "contentType": "text/cql",
            "data": "bGlicmFyeSBBZHVsdE91dHBhdGllbnRFbmNvdW50ZXJzIHZlcnNpb24gJzEuMS4wMDAndXNpbmcgUURNIHZlcnNpb24gJzUuMycvKiBjb2Rlc3lzdGVtICJMT0lOQzoyLjQ2IjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuNi4xJyB2ZXJzaW9uICd1cm46aGw3OnZlcnNpb246Mi40Nidjb2Rlc3lzdGVtICJTTk9NRURDVDoyMDE2LTAzIjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuNi45NicgdmVyc2lvbiAndXJuOmhsNzp2ZXJzaW9uOjIwMTYtMDMnICovY29kZXN5c3RlbSAiTE9JTkM6Mi40NiI6ICdodHRwOi8vbG9pbmMub3JnJyB2ZXJzaW9uICd1cm46aGw3OnZlcnNpb246Mi40Nidjb2Rlc3lzdGVtICJTTk9NRURDVDoyMDE2LTAzIjogJ2h0dHA6Ly9zbm9tZWQuaW5mby9zY3QnIHZlcnNpb24gJ3VybjpobDc6dmVyc2lvbjoyMDE2LTAzJ3ZhbHVlc2V0ICJPZmZpY2UgVmlzaXQiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDAxJ3ZhbHVlc2V0ICJBbm51YWwgV2VsbG5lc3MgVmlzaXQiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjUyNi4zLjEyNDAndmFsdWVzZXQgIlByZXZlbnRpdmUgQ2FyZSBTZXJ2aWNlcyAtIEVzdGFibGlzaGVkIE9mZmljZSBWaXNpdCwgMTggYW5kIFVwIjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDEuMTIuMTAyNSd2YWx1ZXNldCAiUHJldmVudGl2ZSBDYXJlIFNlcnZpY2VzLUluaXRpYWwgT2ZmaWNlIFZpc2l0LCAxOCBhbmQgVXAiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDIzJ3ZhbHVlc2V0ICJIb21lIEhlYWx0aGNhcmUgU2VydmljZXMiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDE2J2NvZGUgIkJpcnRoZGF0ZSI6ICcyMTExMi04JyBmcm9tICJMT0lOQzoyLjQ2IiBkaXNwbGF5ICdCaXJ0aCBkYXRlJ2NvZGUgIkRlYWQiOiAnNDE5MDk5MDA5JyBmcm9tICJTTk9NRURDVDoyMDE2LTAzIiBkaXNwbGF5ICdEZWFkJ2NvbnRleHQgUGF0aWVudC8qIGRlZmluZSAiUXVhbGlmeWluZyBFbmNvdW50ZXJzIjoJKCBbIkVuY291bnRlciwgUGVyZm9ybWVkIjogIk9mZmljZSBWaXNpdCJdCQl1bmlvbiBbIkVuY291bnRlciwgUGVyZm9ybWVkIjogIkFubnVhbCBXZWxsbmVzcyBWaXNpdCJdCQl1bmlvbiBbIkVuY291bnRlciwgUGVyZm9ybWVkIjogIlByZXZlbnRpdmUgQ2FyZSBTZXJ2aWNlcyAtIEVzdGFibGlzaGVkIE9mZmljZSBWaXNpdCwgMTggYW5kIFVwIl0JCXVuaW9uIFsiRW5jb3VudGVyLCBQZXJmb3JtZWQiOiAiUHJldmVudGl2ZSBDYXJlIFNlcnZpY2VzLUluaXRpYWwgT2ZmaWNlIFZpc2l0LCAxOCBhbmQgVXAiXQkJdW5pb24gWyJFbmNvdW50ZXIsIFBlcmZvcm1lZCI6ICJIb21lIEhlYWx0aGNhcmUgU2VydmljZXMiXSApIFZhbGlkRW5jb3VudGVyCQl3aGVyZSBWYWxpZEVuY291bnRlci5yZWxldmFudFBlcmlvZCBkdXJpbmcgIk1lYXN1cmVtZW50IFBlcmlvZCIgKi9kZWZpbmUgZnVuY3Rpb24gIlF1YWxpZnlpbmcgRW5jb3VudGVycyIoTWVhc3VyZW1lbnRQZXJpb2QgSW50ZXJ2YWw8RGF0ZVRpbWU+KToJKCBbIkVuY291bnRlciwgUGVyZm9ybWVkIjogIk9mZmljZSBWaXNpdCJdCQl1bmlvbiBbIkVuY291bnRlciwgUGVyZm9ybWVkIjogIkFubnVhbCBXZWxsbmVzcyBWaXNpdCJdCQl1bmlvbiBbIkVuY291bnRlciwgUGVyZm9ybWVkIjogIlByZXZlbnRpdmUgQ2FyZSBTZXJ2aWNlcyAtIEVzdGFibGlzaGVkIE9mZmljZSBWaXNpdCwgMTggYW5kIFVwIl0JCXVuaW9uIFsiRW5jb3VudGVyLCBQZXJmb3JtZWQiOiAiUHJldmVudGl2ZSBDYXJlIFNlcnZpY2VzLUluaXRpYWwgT2ZmaWNlIFZpc2l0LCAxOCBhbmQgVXAiXQkJdW5pb24gWyJFbmNvdW50ZXIsIFBlcmZvcm1lZCI6ICJIb21lIEhlYWx0aGNhcmUgU2VydmljZXMiXSApIFZhbGlkRW5jb3VudGVyCQl3aGVyZSBWYWxpZEVuY291bnRlci5yZWxldmFudFBlcmlvZCBkdXJpbmcgZGF5IG9mIE1lYXN1cmVtZW50UGVyaW9k"
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "Library/AdultOutpatientEncounters"
      }
    },
    {
      "resource": {
        "resourceType": "Library",
        "id": "MATGlobalCommonFunctions",
        "status": "active",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "dataRequirement": [
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "text/cql",
            "data": ""
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "Library/MATGlobalCommonFunctions"
      }
    },
    {
      "resource": {
        "resourceType": "Library",
        "id": "Hospice",
        "status": "active",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "dataRequirement": [
          {
            "type": "PositiveEncounterPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "PositiveInterventionOrder",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          },
          {
            "type": "PositiveInterventionPerformed",
            "codeFilter": [
              {
                "path": "code",
                "valueSetString": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "text/cql",
            "data": "bGlicmFyeSBIb3NwaWNlIHZlcnNpb24gJzEuMC4wMDAndXNpbmcgUURNIHZlcnNpb24gJzUuMycvKiBjb2Rlc3lzdGVtICJMT0lOQzoyLjQ2IjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuNi4xJyB2ZXJzaW9uICd1cm46aGw3OnZlcnNpb246Mi40Nidjb2Rlc3lzdGVtICJTTk9NRURDVDoyMDE2LTAzIjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuNi45NicgdmVyc2lvbiAndXJuOmhsNzp2ZXJzaW9uOjIwMTYtMDMnY29kZXN5c3RlbSAiU05PTUVEQ1Q6MjAxNy0wMyI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjYuOTYnIHZlcnNpb24gJ3VybjpobDc6dmVyc2lvbjoyMDE3LTAzJ2NvZGVzeXN0ZW0gIlNOT01FRENUOjIwMTctMDkiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My42Ljk2JyB2ZXJzaW9uICd1cm46aGw3OnZlcnNpb246MjAxNy0wOScgKi9jb2Rlc3lzdGVtICJMT0lOQzoyLjQ2IjogJ2h0dHA6Ly9sb2luYy5vcmcnIHZlcnNpb24gJ3VybjpobDc6dmVyc2lvbjoyLjQ2J2NvZGVzeXN0ZW0gIlNOT01FRENUOjIwMTYtMDMiOiAnaHR0cDovL3Nub21lZC5pbmZvL3NjdCcgdmVyc2lvbiAndXJuOmhsNzp2ZXJzaW9uOjIwMTYtMDMnY29kZXN5c3RlbSAiU05PTUVEQ1Q6MjAxNy0wMyI6ICdodHRwOi8vc25vbWVkLmluZm8vc2N0JyB2ZXJzaW9uICd1cm46aGw3OnZlcnNpb246MjAxNy0wMydjb2Rlc3lzdGVtICJTTk9NRURDVDoyMDE3LTA5IjogJ2h0dHA6Ly9zbm9tZWQuaW5mby9zY3QnIHZlcnNpb24gJ3VybjpobDc6dmVyc2lvbjoyMDE3LTA5J3ZhbHVlc2V0ICJFbmNvdW50ZXIgSW5wYXRpZW50IjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuMy42NjYuNS4zMDcndmFsdWVzZXQgIkhvc3BpY2UgY2FyZSBhbWJ1bGF0b3J5IjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM3NjIuMS40LjExMDguMTUnY29kZSAiQmlydGhkYXRlIjogJzIxMTEyLTgnIGZyb20gIkxPSU5DOjIuNDYiIGRpc3BsYXkgJ0JpcnRoIGRhdGUnY29kZSAiRGVhZCI6ICc0MTkwOTkwMDknIGZyb20gIlNOT01FRENUOjIwMTYtMDMiIGRpc3BsYXkgJ0RlYWQnY29kZSAiRGlzY2hhcmdlIHRvIGhlYWx0aGNhcmUgZmFjaWxpdHkgZm9yIGhvc3BpY2UgY2FyZSAocHJvY2VkdXJlKSI6ICc0MjgzNzEwMDAxMjQxMDAnIGZyb20gIlNOT01FRENUOjIwMTctMDkiIGRpc3BsYXkgJ0Rpc2NoYXJnZSB0byBoZWFsdGhjYXJlIGZhY2lsaXR5IGZvciBob3NwaWNlIGNhcmUgKHByb2NlZHVyZSknY29kZSAiRGlzY2hhcmdlIHRvIGhvbWUgZm9yIGhvc3BpY2UgY2FyZSAocHJvY2VkdXJlKSI6ICc0MjgzNjEwMDAxMjQxMDcnIGZyb20gIlNOT01FRENUOjIwMTctMDkiIGRpc3BsYXkgJ0Rpc2NoYXJnZSB0byBob21lIGZvciBob3NwaWNlIGNhcmUgKHByb2NlZHVyZSkncGFyYW1ldGVyICJNZWFzdXJlbWVudCBQZXJpb2QiIEludGVydmFsPERhdGVUaW1lPmNvbnRleHQgUGF0aWVudC8qIGRlZmluZSAiSGFzIEhvc3BpY2UiOglleGlzdHMgKCBbIkVuY291bnRlciwgUGVyZm9ybWVkIjogIkVuY291bnRlciBJbnBhdGllbnQiXSBEaXNjaGFyZ2VIb3NwaWNlCQkJd2hlcmUgKCBEaXNjaGFyZ2VIb3NwaWNlLmRpc2NoYXJnZURpc3Bvc2l0aW9uIGFzIENvZGUgfiAiRGlzY2hhcmdlIHRvIGhvbWUgZm9yIGhvc3BpY2UgY2FyZSAocHJvY2VkdXJlKSIJCQkJCW9yIERpc2NoYXJnZUhvc3BpY2UuZGlzY2hhcmdlRGlzcG9zaXRpb24gYXMgQ29kZSB+ICJEaXNjaGFyZ2UgdG8gaGVhbHRoY2FyZSBmYWNpbGl0eSBmb3IgaG9zcGljZSBjYXJlIChwcm9jZWR1cmUpIgkJCSkJCQkJYW5kIERpc2NoYXJnZUhvc3BpY2UucmVsZXZhbnRQZXJpb2QgZW5kcyBkdXJpbmcgIk1lYXN1cmVtZW50IFBlcmlvZCIJKQkJb3IgZXhpc3RzICggWyJJbnRlcnZlbnRpb24sIE9yZGVyIjogIkhvc3BpY2UgY2FyZSBhbWJ1bGF0b3J5Il0gSG9zcGljZU9yZGVyCQkJCXdoZXJlIEhvc3BpY2VPcmRlci5hdXRob3JEYXRldGltZSBkdXJpbmcgIk1lYXN1cmVtZW50IFBlcmlvZCIJCSkJCW9yIGV4aXN0cyAoIFsiSW50ZXJ2ZW50aW9uLCBQZXJmb3JtZWQiOiAiSG9zcGljZSBjYXJlIGFtYnVsYXRvcnkiXSBIb3NwaWNlUGVyZm9ybWVkCQkJCXdoZXJlIEhvc3BpY2VQZXJmb3JtZWQucmVsZXZhbnRQZXJpb2Qgb3ZlcmxhcHMgIk1lYXN1cmVtZW50IFBlcmlvZCIJCSkgKi9kZWZpbmUgIkhhcyBIb3NwaWNlIjoJZXhpc3RzICggWyJFbmNvdW50ZXIsIFBlcmZvcm1lZCI6ICJFbmNvdW50ZXIgSW5wYXRpZW50Il0gRGlzY2hhcmdlSG9zcGljZQkJCXdoZXJlICggRGlzY2hhcmdlSG9zcGljZS5kaXNjaGFyZ2VEaXNwb3NpdGlvbiBhcyBDb2RlIH4gIkRpc2NoYXJnZSB0byBob21lIGZvciBob3NwaWNlIGNhcmUgKHByb2NlZHVyZSkiCQkJCQlvciBEaXNjaGFyZ2VIb3NwaWNlLmRpc2NoYXJnZURpc3Bvc2l0aW9uIGFzIENvZGUgfiAiRGlzY2hhcmdlIHRvIGhlYWx0aGNhcmUgZmFjaWxpdHkgZm9yIGhvc3BpY2UgY2FyZSAocHJvY2VkdXJlKSIJCQkpCQkJCWFuZCBEaXNjaGFyZ2VIb3NwaWNlLnJlbGV2YW50UGVyaW9kIGVuZHMgZHVyaW5nIGRheSBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIgkpCQlvciBleGlzdHMgKCBbIkludGVydmVudGlvbiwgT3JkZXIiOiAiSG9zcGljZSBjYXJlIGFtYnVsYXRvcnkiXSBIb3NwaWNlT3JkZXIJCQkJd2hlcmUgSG9zcGljZU9yZGVyLmF1dGhvckRhdGV0aW1lIGR1cmluZyBkYXkgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIJCSkJCW9yIGV4aXN0cyAoIFsiSW50ZXJ2ZW50aW9uLCBQZXJmb3JtZWQiOiAiSG9zcGljZSBjYXJlIGFtYnVsYXRvcnkiXSBIb3NwaWNlUGVyZm9ybWVkCQkJCXdoZXJlIEhvc3BpY2VQZXJmb3JtZWQucmVsZXZhbnRQZXJpb2Qgb3ZlcmxhcHMgZGF5IG9mICJNZWFzdXJlbWVudCBQZXJpb2QiCQkp"
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "Library/Hospice"
      }
    }
  ]
}